% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_expand.R
\name{f_expand}
\alias{f_expand}
\title{Formula interpolation}
\usage{
f_expand(f, lhs = TRUE, rhs = TRUE, envir = parent.frame())
}
\arguments{
\item{f}{A formula}

\item{lhs}{logical. Expand the left-hand side of the formula}

\item{rhs}{logical. Expand the left-hand side of the formula}

\item{envir}{An environment in which to evaluate the functions. This
is where the expansion functions look for variable names.}
}
\value{
A \code{formula} object
}
\description{
Formula interpolation to expand functions in a formula into lists of
variables. The interpolation provided here are convenience functions for
formulae used in modeling applications.
}
\details{
The following special interpolation functions are provided:
\itemize{
\item{\code{.x(..., sep = "+")} expands variables using the semantics in
   \code{dplyr} selection functions.}
\item{\code{.x_(..., sep = "+")} is the standard evaluation version of
   \code{.x}}
\item{\code{.p(.f, sep = "+")} matches all objects in \code{envir} that
   satisfy the predicate function \code{.f}}
\item{\code{.m(pattern, sep = "+")} matches all names in \code{envir} that
   match the regular expression \code{pattern}.}
}
}
\examples{
f_expand(~ .m("Sepal\\\\.*"), envir = iris)
f_expand(~ .x(everything()), envir = iris)
f_expand(~ .x(-Sepal.Width), envir = iris)
f_expand(~ .x(matches("Length"), -Sepal.Length), envir = iris)
f_expand(~ .p(is.numeric), envir = iris)
f_expand(~ .p(is.numeric, sep = "*"), envir = iris)
}
\seealso{
See \code{\link[base]{bquote}} and \code{\link[lazyeval]{f_interp}}
  for other formula interpolation methods.
}
